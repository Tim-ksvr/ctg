# This is a default site configuration which will simply return 404, preventing
# chance access to any other virtualhost.

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        location / {
           root   /app;
           index  index.html index.htm;
        }
    
        location /ws {
           if ($http_upgrade != "websocket") {
              return 301 https://$host/;              
           }
           proxy_pass http://127.0.0.1:3580;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
           proxy_set_header        Host            $host;
           proxy_set_header        X-Real-IP       $remote_addr;
           proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location /wspath {
           if ($http_upgrade != "websocket") {
              return 301 https://$host/;              
           }
           proxy_pass http://127.0.0.1:3553;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
           proxy_set_header        Host            $host;
           proxy_set_header        X-Real-IP       $remote_addr;
           proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location /ip {
           types { }
           default_type 'text/plain; charset=utf-8';
           add_header XR-IPs "$proxy_add_x_forwarded_for";
           return 200 "IPs=$proxy_add_x_forwarded_for";
        }

        # You may need this to prevent return 404 recursion.
        location = /404.html {
                internal;
        }
}
